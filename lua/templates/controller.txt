using Microsoft.AspNetCore.Mvc;
using MMP.Services;
using MMP.Entities;

namespace MMP.Controllers
{
    [ApiController]
    [Route("address")]
    public class PersonController : ControllerBase
    {
        private readonly PersonService _personService;

        public PersonController(PersonService personService)
        {
            _personService = personService;
        }

        [HttpGet]
        public async Task<IActionResult> GetAll()
        {
            try
            {
                var result = await _personService.GetAllAsync();
                return Ok(result ?? null);
            }
            catch (System.Exception e)
            {
                return BadRequest(e.Message);
            }
        }

        [HttpGet("{id}")]
        public async Task<IActionResult> GetById(Guid id)
        {
            try
            {
                var result = await _personService.GetByIdAsync(id);
                return Ok(result ?? null);
            }
            catch (System.Exception e)
            {
                return BadRequest(e.Message);
            }
        }

        [HttpPost]
        public async Task<IActionResult> Create([FromBody] Person model)
        {
            try
            {
                await _personService.AddAsync(model);
                return Ok("successfully created.");
            }
            catch (System.Exception e)
            {
                return BadRequest(e.Message);
            }
        }


        [HttpPut("{id}")]
        public async Task<IActionResult> Update(int id, [FromBody] Person model)
        {
            try
            {
                await _personService.UpdateAsync(model);
                return Ok("successfully updated.");
            }
            catch (System.Exception e)
            {
                return BadRequest(e.Message);
            }
        }

        [HttpDelete("{id}")]
        public async Task<IActionResult> Delete(Guid id)
        {
            try
            {
                await _personService.DeleteAsync(id);
                return Ok("successfully deleted.");
            }
            catch (System.Exception e)
            {
                return BadRequest(e.Message);
            }
        }
    }
}
